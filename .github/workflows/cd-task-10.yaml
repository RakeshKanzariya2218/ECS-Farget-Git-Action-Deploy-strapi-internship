name: CD - Blue-Green ECS Deployment

on:
  workflow_run:
    workflows: ["CI - Blue-Green image push in ECR"]
    types:
      - completed

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  ACM_CERTIFICATE_ARN: ${{ secrets.ACM_CERTIFICATE_ARN }}
  ECR_REPO: 132866222051.dkr.ecr.us-east-1.amazonaws.com/rakesh-blue-green-ecs

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      # Set IMAGE_TAG from triggering workflow commit
      - name: Set IMAGE_TAG from CI commit
        run: |
          IMAGE_TAG=$(echo ${{ github.event.workflow_run.head_commit.id }} | cut -c1-8)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Terraform Init
      - name: Terraform Init
        run: |
          cd ECS-farget-Blue-Green-Deploy-task-10
          terraform init \
          -backend-config="bucket=rkanzariya.info" \
          -backend-config="key=rakesh-task-10-blue-green.tfstate" \
          -backend-config="region=${AWS_REGION}"

      # Terraform Plan
      - name: Terraform Plan
        run: |
          cd ECS-farget-Blue-Green-Deploy-task-10
          terraform plan \
          -var="image_tag=${IMAGE_TAG}" \
          -var="region=${{ secrets.AWS_REGION }}" \
          -var="acm_certificate_arn=${{ secrets.ACM_CERTIFICATE_ARN }}" \
          -var="db_username=${{ secrets.DB_USERNAME }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}"

      # Terraform Apply
      - name: Terraform Apply
        run: |
          cd ECS-farget-Blue-Green-Deploy-task-10
          terraform apply -auto-approve \
          -var="image_tag=${IMAGE_TAG}" \
          -var="region=${{ secrets.AWS_REGION }}" \
          -var="acm_certificate_arn=${{ secrets.ACM_CERTIFICATE_ARN }}" \
          -var="db_username=${{ secrets.DB_USERNAME }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}"

      # Trigger CodeDeploy for Blue-Green deployment
      - name: Trigger CodeDeploy Deployment
        run: |
          # Get the latest task definition ARN
          TASK_DEF_ARN=$(aws ecs list-task-definitions \
            --family-prefix rakesh-blue-green-strapi-task \
            --sort DESC \
            --max-items 1 \
            --query 'taskDefinitionArns[0]' \
            --output text)

          echo "Deploying task definition: $TASK_DEF_ARN"

          # Generate AppSpec JSON for ECS Blue/Green deployment
          APPSPEC_JSON=$(jq -n \
            --arg td "$TASK_DEF_ARN" \
            '{
              Resources: [
                {
                  TargetService: {
                    Type: "AWS::ECS::Service",
                    Properties: {
                      TaskDefinition: $td,
                      LoadBalancerInfo: {
                        ContainerName: "strapi",
                        ContainerPort: 1337
                      }
                    }
                  }
                }
              ]
            }')

          # Trigger CodeDeploy
          aws deploy create-deployment \
            --application-name "${PROJECT_NAME}-codedeploy-app" \
            --deployment-group-name "${PROJECT_NAME}-deployment-group" \
            --deployment-config-name "CodeDeployDefault.ECSCanary10Percent5Minutes" \
            --revision "{\"revisionType\":\"AppSpecContent\",\"appSpecContent\":{\"content\":$APPSPEC_JSON}}" \
            --description "Triggered by GitHub Actions for image $IMAGE_TAG" \
            --output text
